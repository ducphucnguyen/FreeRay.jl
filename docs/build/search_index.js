var documenterSearchIndex = {"docs":
[{"location":"getting_started/inverse_lighting.html#Inverse-Lighting-Tutorial","page":"Inverse Lighting","title":"Inverse Lighting Tutorial","text":"","category":"section"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"In this tutorial we shall explore the inverse lighting problem. Here, we shall try to reconstruct a target image by optimizing the parameters of the light source (using gradients).","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"using RayTracer, Images, Zygote, Flux, Statistics","category":"page"},{"location":"getting_started/inverse_lighting.html#Configuring-the-Scene","page":"Inverse Lighting","title":"Configuring the Scene","text":"","category":"section"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"Reduce the screen_size if the optimization is taking a bit long","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"screen_size = (w = 300, h = 300)","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"Now we shall load the scene using load_obj function. For this we need the obj and mtl files. They can be downloaded using the following commands:","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"wget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.obj\nwget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.mtl","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"scene = load_obj(\"./tree.obj\")","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"Let us set up the Camera. For a more detailed understanding of the rendering process look into Introduction to rendering using RayTracer.jl.","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"cam = Camera(\n    lookfrom = Vec3(0.0f0, 6.0f0, -10.0f0),\n    lookat   = Vec3(0.0f0, 2.0f0,  0.0f0),\n    vup      = Vec3(0.0f0, 1.0f0,  0.0f0),\n    vfov     = 45.0f0,\n    focus    = 0.5f0,\n    width    = screen_size.w,\n    height   = screen_size.h\n)\n\norigin, direction = get_primary_rays(cam)","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"We should define a few convenience functions. Since we are going to calculate the gradients only wrt to light we have it as an argument to the function. Having scene as an additional parameters simply allows us to test our method for other meshes without having to run Zygote.refresh() repeatedly.","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"function render(light, scene)\n    packed_image = raytrace(origin, direction, scene, light, origin, 2)\n    array_image = reshape(hcat(packed_image.x, packed_image.y, packed_image.z),\n                          (screen_size.w, screen_size.h, 3, 1))\n    return array_image\nend\n\nshowimg(img) = colorview(RGB, permutedims(img[:,:,:,1], (3,2,1)))","category":"page"},{"location":"getting_started/inverse_lighting.html#inv_light","page":"Inverse Lighting","title":"Ground Truth Image","text":"","category":"section"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"For this tutorial we shall use the PointLight source. We define the ground truth lighting source and the rendered image. We will later assume that we have no information about this lighting condition and try to reconstruct the image.","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"light_gt = PointLight(\n    color     = Vec3(1.0f0, 1.0f0, 1.0f0),\n    intensity = 20000.0f0,\n    position  = Vec3(1.0f0, 10.0f0, -50.0f0)\n)\n\ntarget_img = render(light_gt, scene)","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"The presence of zeroonenorm is very important here. It rescales the values in the image to 0 to 1. If we don't perform this step Images will clamp the values while generating the image in RGB format.","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"showimg(zeroonenorm(target_img))","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"<p align=\"center\">\n    <img width=300 height=300 src=\"../../assets/inv_light_original.png\">\n</p>","category":"page"},{"location":"getting_started/inverse_lighting.html#Initial-Guess-of-Lighting-Parameters","page":"Inverse Lighting","title":"Initial Guess of Lighting Parameters","text":"","category":"section"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"We shall make some arbitrary guess of the lighting parameters (intensity and position) and try to get back the image in Ground Truth Image","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"light_guess = PointLight(\n    color     = Vec3(1.0f0, 1.0f0, 1.0f0),\n    intensity = 1.0f0,\n    position  = Vec3(-1.0f0, -10.0f0, -50.0f0)\n)\n\nshowimg(zeroonenorm(render(light_guess, scene)))","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"<p align=\"center\">\n    <img width=300 height=300 src=\"../../assets/inv_light_initial.png\">\n</p>","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"We shall store the images in results_inv_lighting directory","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"mkpath(\"results_inv_lighting\")\n\nsave(\"./results_inv_lighting/inv_light_original.png\",\n     showimg(zeroonenorm(render(light_gt, scene))))\nsave(\"./results_inv_lighting/inv_light_initial.png\",\n     showimg(zeroonenorm(render(light_guess, scene))))","category":"page"},{"location":"getting_started/inverse_lighting.html#Optimization-Loop","page":"Inverse Lighting","title":"Optimization Loop","text":"","category":"section"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"We will use the ADAM optimizer from Flux. (Try experimenting with other optimizers as well). We can also use frameworks like Optim.jl for optimization. We will show how to do it in a future tutorial","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"for i in 1:401\n    loss, back_fn = Zygote.forward(light_guess) do L\n        sum((render(L, scene) .- target_img) .^ 2)\n    end\n    @show loss\n    gs = back_fn(1.0f0)\n    update!(opt, light_guess.intensity, gs[1].intensity)\n    update!(opt, light_guess.position, gs[1].position)\n    if i % 5 == 1\n        save(\"./results_inv_lighting/iteration_$i.png\",\n             showimg(zeroonenorm(render(light_guess, scene))))\n    end\nend","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"If we generate a gif for the optimization process it will look similar to this","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"<p align=\"center\">\n     <img width=300 height=300 src=\"../../assets/inv_lighting.gif\">\n</p>","category":"page"},{"location":"getting_started/inverse_lighting.html","page":"Inverse Lighting","title":"Inverse Lighting","text":"This page was generated using Literate.jl.","category":"page"},{"location":"api/renderers.html","page":"Renderers","title":"Renderers","text":"CurrentModule = RayTracer","category":"page"},{"location":"api/renderers.html#Renderers","page":"Renderers","title":"Renderers","text":"","category":"section"},{"location":"api/renderers.html","page":"Renderers","title":"Renderers","text":"This section describes the renderers available in RayTracer.jl","category":"page"},{"location":"api/renderers.html","page":"Renderers","title":"Renderers","text":"Pages = [\"renderers.md\"]","category":"page"},{"location":"api/renderers.html#Documentation","page":"Renderers","title":"Documentation","text":"","category":"section"},{"location":"api/renderers.html","page":"Renderers","title":"Renderers","text":"Modules = [RayTracer]\nPages = [\"blinnphong.jl\",\n         \"rasterizer.jl\",\n         \"accelerated_raytracer.jl\"]","category":"page"},{"location":"index.html#RayTracer-:-Differentiable-Ray-Tracing-in-Julia","page":"Home","title":"RayTracer : Differentiable Ray Tracing in Julia","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"<p align=\"center\">\r\n    <video width=\"512\" height=\"320\" autoplay loop>\r\n        <source src=\"./assets/udem1.webm\" type=\"video/webm\">\r\n    </video>\r\n</p>","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"RayTracer.jl is a library for differentiable ray tracing. It provides utilities for","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Render complex 3D scenes.\nDifferentiate the Ray Tracer wrt arbitrary scene parameters for Gradient Based Inverse Rendering.","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Download Julia 1.0 or later.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"For the time being, the library is under active development and hence is not registered. But the master branch is pretty stable for experimentation. To install it simply open a julia REPL and do ] add RayTracer.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The master branch will do all computation on CPU. To try out the experimental GPU support do ] add RayTracer#ap/gpu. To observe the potential performance gains of using GPU you will have to render scenes having more number of objects and the 2D image must be of reasonably high resolution.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"note: Note\nOnly rendering is currently supported on GPUs. Gradient Computation is broken but will be supported in the future.","category":"page"},{"location":"index.html#Supporting-and-Citing","page":"Home","title":"Supporting and Citing","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This software was developed as part of academic research. If you would like to help support it, please star the repository. If you use this software as part of your research, teaching, or other activities, we would be grateful if you could cite:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"@misc{pal2019raytracerjl,\r\n    title={{RayTracer.jl: A Differentiable Renderer that supports Parameter Optimization for Scene Reconstruction}},\r\n    author={Avik Pal},\r\n    year={2019},\r\n    eprint={1907.07198},\r\n    archivePrefix={arXiv},\r\n    primaryClass={cs.GR}\r\n}","category":"page"},{"location":"index.html#Contribution-Guidelines","page":"Home","title":"Contribution Guidelines","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This package is written and maintained by Avik Pal. Please fork and send a pull request or create a GitHub issue for bug reports. If you are submitting a pull request make sure to follow the official Julia Style Guide and please use 4 spaces and NOT tabs.","category":"page"},{"location":"index.html#Adding-a-new-feature","page":"Home","title":"Adding a new feature","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"For adding a new feature open a Github Issue first to discuss about it.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Please note that we try and avoid having many primitive objects. This might speed up rendering in some rare cases (as most objects will end up being represented as Triangles) but is really painful to maintain in the future.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"If you wish to add rendering algorithms it needs to be added to the src/renderers directory. Ideally we wish that this is differentiable but we do accept algorithms which are not differentiable (simply add a note in the documentation).","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Any new type that is defined should have a corresponding entry in src/gradients/zygote.jl. Look at existing types to understand how it is done. Note that it is a pretty ugly thing to do and becomes uglier as the number of fields in your struct increases, so do not define something that has a lot of fields unless you need it (see Material).","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"If you don't want a field in your custom type to be not updated while inverse rendering create a subtype of RayTracer.FixedParams and wrap those field in it and store it in your custom type.","category":"page"},{"location":"index.html#Adding-a-tutorial/example","page":"Home","title":"Adding a tutorial/example","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"We use Literate.jl to convert examples to markdown files. Look into its documentation","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Next use the following commands to convert he script to markdown","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"julia> using Literate\r\n\r\njulia> Literate.markdown(\"examples/your_example.jl\", \"docs/src/getting_started/\",\r\n                         documenter = false)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Add an entry to docs/make.jl so that it is available in the side navigation bar.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Add an entry to the docs/src/index.md Contents section.","category":"page"},{"location":"index.html#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"index.html#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\r\n    \"index.md\"\r\n]\r\nDepth = 2","category":"page"},{"location":"index.html#Getting-Started-Tutorials","page":"Home","title":"Getting Started Tutorials","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\r\n    \"getting_started/teapot_rendering.md\",\r\n    \"getting_started/inverse_lighting.md\",\r\n    \"getting_started/optim_compatibility.md\"\r\n]\r\nDepth = 2","category":"page"},{"location":"index.html#API-Documentation","page":"Home","title":"API Documentation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\r\n    \"api/utilities.md\",\r\n    \"api/differentiation.md\",\r\n    \"api/scene.md\",\r\n    \"api/optimization.md\",\r\n    \"api/renderers.md\",\r\n    \"api/accelerators.md\"\r\n]\r\nDepth = 2","category":"page"},{"location":"index.html#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"}]
}
